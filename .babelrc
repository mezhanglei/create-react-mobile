{
  "presets": [
    // Babel功能提供polyfill垫片和转译新语法,但不提供但不处理新的api比如Promise、Set、Map
    // 想处理新的api两种方案(一般偏向第二种):
    // 第一种方式(缺点会污染原型链, 所以开发类库时不能用来开发): 
    // (1) 安装babel-loader@8, @babel/core, @babel/preset-env, core-js,regenerator-runtime
    // (2) 配置@babel/preset-env的useBuiltIns和corejs选项.
    // (3) 注意只有"useBuiltIns": "entry"时需要在入口文件添加两行代码:import "core-js/stable"; import "regenerator-runtime/runtime"
    [
      "@babel/preset-env",
      {
        // 不将ES6模块语法转换为其他模块类型(例如commonjs)的功能，tree shaking禁止转译其他类型
        "modules": false,
        // 1. false默认值, 默认不引入@babel/polyfill
        // 2. "entry" 表示全部引入, 会多加几百kb包大小, 需要额外引入操作.
        // 3. "usage" 会参考browserslist浏览器版本和core-js(特性)的版本按需引入polyfill,但是不会对第三方模块进行转译
        "useBuiltIns": "usage",
        // 使用新特性,使用需要安装core-js和regenerator-runtime两个包
        "corejs": {
          "version": 3,
          "proposals": true
        }
      }
    ],
    "@babel/preset-typescript",
    // 转换react语法
    "@babel/preset-react"
  ],
  "plugins": [
    // 第二种方式(将全局内置对象抽取成单独的模块,并创建沙盒环境解决全局变量污染, 做js库的时候必须要用这种.):
    // (1) 安装包babel-loader@8,@babel/core,@babel/preset-env,@babel/plugin-transform-runtime,@babel/runtime-corejs3
    // (2) 配置
    // [
    //   "@babel/plugin-transform-runtime",
    //   {
    //     // 使用特性,需要安装@babel/runtime-corejs3
    //     "corejs": {
    //       "version": 3,
    //       "proposals": true
    //     },
    //     // 进行较小的构建,不保留commonjs语义
    //     "useESModules": true
    //   }
    // ],
    // 异步加载语法解析插件,解析import().then()这种语法
    "@babel/plugin-syntax-dynamic-import",
    // 用来编译类,loose为true表示编译成赋值表达式
    ["@babel/plugin-proposal-class-properties", {
      "loose": true
    }],
    // 装饰器
    ["@babel/plugin-proposal-decorators", {
      // 使用旧式语法，但是@babel/plugin-proposal-class-properties也必须设置loose为true
      "legacy": true
    }],
    // babel-plugin-import配置类库按需加载
    [
      "import",
      {
        "libraryName": "antd",
        "libraryDirectory": "es",
        // css 表示导入解析后的css文件
        // true 表示在解析阶段引入less
        "style": true
      }
    ]
  ]
}